{"pageProps":{"title":"Kubernetes","content":"#### What it is\nKubernetes is a platform which allows to run and manage containerized applications.\n\n#### Concepts\n- Annotation: allows to store addition information with a Kubernetes object; can have a big size.\n- ConfigMap: stores environment variables.\n- CronJob: used for background tasks run on time; under different conditions may run 0, 1 or more than 1 time.\n- DaemonSet: runs a copy of a pod on each node; usually used for logging and metric collection.\n- Deployment: updates a replica set or a pod; implements rolling updates and rolbacks.\n- Job: creates one or more pods and ensures they are successfully terminated after execution; can restart if it fails.\n- HorizontalPodAutoscaler: scales deployment or replica set basing on CPU usage or other metrics.\n- Ingress: is a router that accepts incoming traffic and maps URLs to services; can implement TLS termination.\n- Label: are key-value pairs that are used to identify Kubernetes objects.\n- Name: every object in Kubernetes has a human-readable name and unique id (UID).\n- Namespace: allow to organize a set of Kubernetes resources inside a Kubernetes cluster into a virtual cluster; nodes and persistent volumes doesn't belong to a namespace.\n- Pod: runs one or more containers with the same IP Address.\n- ReplicaSet: allows to run multiple copies of a pod for higher availability.\n- Secret: used to store backend credentials.\n- Service: allows to address a collection of pods for network communication.\n    - ClusterIP: default service type; exposes service by IP inside Kubernetes cluster.\n    - NodePort: exposes service externally using each node IP address and a predefined port.\n    - LoadBalancer: exposes service externally with a load balancer per one service.\n    - ExternalName: works like a proxy for an external service by DNS name.\n- Volume: is a directory that is accessible to all containers in a pod.\n    - EmptyDir: ot persistent (when pod is restarted its data is lost), starts empty and allows to share folder between containers of the same pod (when explicitly mounted).\n    - GitRepo: not persistent, starts with data from a public Git repo and allows to share folder between containers of the same pod\n    - Secret: in-memory directory to pass credentials to pods.\n    - HostPath: persistent on a node, usually is used with DaemonSet.\n    - PersistentVolume: persistent, created by admin with a given technology (like GCEPersistentDisk), capacity and access modes.\n    - PersistentVolumeClaim: abstracts away from a given technology by pointing to PersistentVolume.\n\n#### Commands\n- kubectl get pod\n- kubectl get pod -A # all namespaces\n- kubectl get service\n- kubectl get deployment\n- kubectl get node\n- kubectl get pvc    # persistent volume claims\n\nThe double dash ( -- ) in kubectl command separates the arguments you want to pass to the command from the kubectl arguments.\n"},"__N_SSG":true}