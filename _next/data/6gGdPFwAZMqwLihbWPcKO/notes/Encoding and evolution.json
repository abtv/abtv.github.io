{"pageProps":{"title":"Encoding and evolution","content":"#### Encoding\nA serialization process: transform data from memory to buffer and vice versa.\n\nUsually we use some protocol if we want at least one of:\n1. Access to the same data from different programming languages.\n2. Use compressed form of data. It is important if we have terabytes of data and more.\n\n#### Evolution\nA process of data schema changes. Almost any app will evolve over time. We need to support backward and forward compatibility if we want to release without a downtime.\n\n#### Compatibility\n1. Backward: new code can read old data format.\n2. Forward: old code can read new data format.\n\nBoth are required for rolling upgrades.\n\n#### Data exchange protocols\n- XML (optional schema)\n- JSON (optional schema)\n- Apache Thrift (required schema)\n- Protocol buffers (required schema)\n- Apache Avro (required schema, separates reader and writer schemas)\n\n#### Dataflow can go through\n1. Database\n2. Remote service calls\n3. Message passing\n\n#### REST\nNot a protocol but a design philosophy which uses principles of HTTP. Uses URI for resource identification. Relies on HTTP mechanisms for caching and authentication.\n\n#### SOAP\nXML-based protocol. Uses code generation. Much harder to use than REST in dynamic languages.\n"},"__N_SSG":true}