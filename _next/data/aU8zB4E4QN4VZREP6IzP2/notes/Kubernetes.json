{"pageProps":{"title":"Kubernetes","content":"### What Kubernetes is\n  Kubernetes is a platform which allows to run and manage containerized applications.\n### Annotation\n  Allows to store addition information with a Kubernetes object; can have a big size.\n### ConfigMap\n  Stores environment variables.\n### CronJob\n  Used for background tasks run on time; under different conditions may run 0, 1 or more than 1 time.\n### DaemonSet\n  Runs a copy of a pod on each node; usually used for logging and metric collection.\n### Deployment\n  Updates a replica set or a pod; implements rolling updates and rolbacks.\n### Job\n  Creates one or more pods and ensures they are successfully terminated after execution; can restart if it fails.\n### HorizontalPodAutoscaler\n  Scales deployment or replica set basing on CPU usage or other metrics.\n### Ingress\n  Is a router that accepts incoming traffic and maps URLs to services; can implement TLS termination.\n### Label\n  Are key-value pairs that are used to identify Kubernetes objects.\n### Name\n  Every object in Kubernetes has a human-readable name and unique id (UID).\n### Namespace\n  Allow to organize a set of Kubernetes resources inside a Kubernetes cluster into a virtual cluster; nodes and persistent volumes doesn't belong to a namespace.\n### Pod\n  Runs one or more containers with the same IP Address.\n### ReplicaSet\n  Allows to run multiple copies of a pod for higher availability.\n### Secret\n  Used to store backend credentials.\n### Service\n  Allows to address a collection of pods for network communication.\n### Types of services\n#### ClusterIP\nDefault service type; exposes service by IP inside Kubernetes cluster.\n#### NodePort\nExposes service externally using each node IP address and a predefined port. \n#### LoadBalancer\nExposes service externally with a load balancer per one service.\n#### ExternalName\nWorks like a proxy for an external service by DNS name.\n### Volume\n  Is a directory that is accessible to all containers in a pod.\n### Types of volumes\n#### EmptyDir\nNot persistent (when pod is restarted its data is lost), starts empty and allows to share folder between containers of the same pod (when explicitly mounted).\n#### GitRepo\nNot persistent, starts with data from a public Git repo and allows to share folder between containers of the same pod\n#### Secret\nIn-memory directory to pass credentials to pods.\n#### HostPath\nPersistent on a node, usually is used with DaemonSet.\n#### PersistentVolume\nPersistent, created by admin with a given technology (like GCEPersistentDisk), capacity and access modes.\n#### PersistentVolumeClaim\nAbstracts away from a given technology by pointing to PersistentVolume.\n\n### Show pods in all namespaces\nkubectl get pod -A\n### Show services\nkubectl get service\n### Show deployments\nkubectl get deployment\n### Show nodes\nkubectl get node\n### Show persistence volume claims\nkubectl get pvc\n\n### Double dash in a command\nThe double dash ( -- ) in kubectl command separates the arguments you want to pass to the command from the kubectl arguments.\n"},"__N_SSG":true}