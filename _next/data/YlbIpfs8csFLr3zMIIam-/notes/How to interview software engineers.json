{"pageProps":{"title":"How to interview software engineers","content":"## Checklist\n\n### 1. Define your goal as an employer\n`Write down what you expect from a new employee for this particular role.`\n\nFor example, I may like to see:\n1. Experience in distributed systems:\n- If we use relational databases I will look for experience with optimistic and pessimistic locking.\n- If we use microservices and asynchronous events I will look for experience with logic implemented in an idempotent way.\n2. Communication skills:\n- Ability and desire to manage a working conflict and come to a solution.\n- Ability and desire to push back when necessary.\n- Strive for team results over individual results.\n\n`Important: pay attention only to job-required skills. Prepare a plan what you are going to ask.`\n\n### 2. Study resume\n- Analyse logic behind a career track of a candidate.\n- Analyse what the candidate interested in and how deep his knowledge in the area.\n- Analyse how the candidate studies new things.\n- Analyse if complexity of their projects was rising.\n\n### 3. Interview\n\n#### 3.1. Introduce yourself, your company, and your team\n\nMake sure we are on the same page.\n\n#### 3.2. Describe how you are going to structure the interview\n\nThis will help you both to know what to expect and when.\n\n#### 3.3. Ask questions\n\nThe assessment of skills.\n\n#### 3.4. Give a candidate time to ask you questions\n\nInterview is a mutual process.\n\n### 4. Write down notes on the candidate\n\nThis is not just go/no go, we need to write a small note on each required skill.\nLater it will help to compare candidates if we have several of them.\n\n## Important details\n\n### Ask open questions\nIt is better to ask open questions than closed ones, at least for middle-level positions and higher: you will see how many aspects your candidate may reason about and you can always ask specific questions when needed.\n\n### Examples of open questions\n#### 1. Technical open questions\nYou goal here is to assess breadth and depth of candidate's technical skills. Remember: you need to match it to your job requirements.\n- When to use and when to avoid michroservice architecture?\n- What was the most interesting project you was working on?\n- What was the most challenging task you solved recently?\n- Your manager asks you to help with a legacy code with many bugs. What are you going to do?\n\n#### 2. Communication open questions\nYou goal here is to understand how your candidate works in a team.\n- You are working on a task and you realise it's much harder than you expected. What you are going to do about it?\n- You need to learn something new. What will you do?\n- Our important client complains that our application works slow and your manager asks you to help. What you are going to do?\n\n## Sanity checks:\n- check if a candidate can tell \"I don't know\".\n- check if a candidate can hear you and answer what you asked.\n"},"__N_SSG":true}